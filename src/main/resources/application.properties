
# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://noeyy6ud.noe.edf.fr:5432/lak_api_out
spring.datasource.username=anis
spring.datasource.password=anis


# [RE7] Kerberos Security
java.security.auth.login.config=/home/KO4A517N/API-OUT/configuration/kafka-client-re7.jaas.conf
java.security.krb5.conf=/home/KO4A517N/API-OUT/configuration/krb5.conf
ssl.truststore.location=/home/KO4A517N/API-OUT/configuration/truststore

# [LOCAL] Kerberos Security
#java.security.auth.login.config=/home/karim/Workspace/configuration/kafka-client-local.jaas.conf
#java.security.krb5.conf=/home/karim/Workspace/configuration/krb5.conf
#ssl.truststore.location=/home/karim/Workspace/configuration/truststore


#Kafka configuration
bootstrap.servers=noeyy3pu.noe.edf.fr:9096,noeyycgd.noe.edf.fr:9096,noeyycge.noe.edf.fr:9096
zookeeper=noeyy0zl.noe.edf.fr:2181,noeyyet4.noe.edf.fr:2181,noeyyet5.noe.edf.fr:2181,noeyyet6.noe.edf.fr:2181,noeyyet7.noe.edf.fr:2181
security.protocol=SASL_SSL
ssl.truststore.password=ryba123
enable.auto.commit=true
auto.commit.interval.ms=10000
session.timeout.ms=30000
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Applicative parameters
max.poll.records=500
poll.time=100
topic.prefix=fr.edf.dsp.dlk.api.spring3-
pool.consumer.size=5